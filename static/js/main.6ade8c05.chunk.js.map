{"version":3,"sources":["Modules/calculateWinner.tsx","components/Square.tsx","components/Board.tsx","components/Game.tsx","index.tsx"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","value","onClick","className","Board","this","props","renderSquare","React","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","document","getElementById"],"mappings":"wMAEO,SAASA,EAAgBC,GAW9B,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,I,WCXRG,EAAS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAC9B,OACE,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,KCCMG,EAAb,kKACE,SAAaT,GAAY,IAAD,OACtB,OACE,cAAC,EAAD,CACEM,MAAOI,KAAKC,MAAMb,QAAQE,GAC1BO,QAAS,kBAAM,EAAKI,MAAMJ,QAAQP,QAL1C,oBASE,WACE,OACE,gCACE,sBAAKQ,UAAU,YAAf,UACGE,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKJ,UAAU,YAAf,UACGE,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKJ,UAAU,YAAf,UACGE,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,aAzB7B,GAA2BC,aCKdC,EAAb,4MACEC,MAAmB,CACjBC,QAAS,CACP,CACElB,QAASmB,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GARb,iDAWE,SAAYpB,GACV,IAAMgB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DrB,EADUkB,EAAQA,EAAQf,OAAS,GACjBH,QAAQuB,QAC5BxB,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKU,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACZN,QAASA,EAAQO,OAAO,CACtB,CACEzB,QAASA,KAGbqB,WAAYH,EAAQf,OACpBmB,SAAUV,KAAKK,MAAMK,aA1B3B,oBA8BE,SAAOI,GACLd,KAAKY,SAAS,CACZH,WAAYK,EACZJ,QAASI,EAAO,IAAM,MAjC5B,oBAqCE,WAAU,IAcJC,EAdG,OACDT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS9B,EAAgB6B,EAAQ5B,SAEjC8B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,6BACE,wBAAQvB,QAAS,kBAAM,EAAKyB,OAAOF,IAAnC,SAA2CC,KADpCD,MAYb,OAJEL,EADEE,EACO,WAAaA,EAEb,gBAAkBjB,KAAKK,MAAMK,QAAU,IAAM,KAGtD,sBAAKZ,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEV,QAAS4B,EAAQ5B,QACjBS,QAAS,SAACP,GAAD,OAAO,EAAKiC,YAAYjC,QAGrC,sBAAKQ,UAAU,YAAf,UACE,8BAAMiB,IACN,6BAAKG,cAnEf,GAA0Bf,aCN1BqB,SAAgB,cAAC,EAAD,IAAUC,SAASC,eAAe,U","file":"static/js/main.6ade8c05.chunk.js","sourcesContent":["import { Squares } from \"../types\";\r\n\r\nexport function calculateWinner(squares: Squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n}\r\n","type SquareProps = {\r\n  value: \"X\" | \"O\" | null;\r\n  onClick: () => void;\r\n};\r\n\r\nexport const Square = ({ value, onClick }: SquareProps) => {\r\n  return (\r\n    <button className=\"square\" onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { Squares } from \"../types\";\r\nimport { Square } from \"./Square\";\r\n\r\ntype BoardProps = {\r\n  squares: Squares;\r\n  onClick: (i: number) => void;\r\n};\r\nexport class Board extends React.Component<BoardProps> {\r\n  renderSquare(i: number) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { calculateWinner } from \"../Modules/calculateWinner\";\r\nimport { Squares } from \"../types\";\r\nimport { Board } from \"./Board\";\r\n\r\ntype GameState = {\r\n  history: {\r\n    squares: Squares;\r\n  }[];\r\n  stepNumber: number;\r\n  xIsNext: boolean;\r\n};\r\n\r\ntype GameProps = {};\r\nexport class Game extends React.Component<GameProps, GameState> {\r\n  state: GameState = {\r\n    history: [\r\n      {\r\n        squares: Array(9).fill(null),\r\n      },\r\n    ],\r\n    stepNumber: 0,\r\n    xIsNext: true,\r\n  };\r\n\r\n  handleClick(i: number) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step: number) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next Player:\" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./index.css\";\r\n\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Game } from \"./components/Game\";\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}