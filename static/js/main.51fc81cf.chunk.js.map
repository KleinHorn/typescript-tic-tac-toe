{"version":3,"sources":["Modules/calculateWinner.tsx","components/Square.tsx","components/Board.tsx","components/Game.tsx","index.tsx"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","value","onClick","className","Board","state","Array","fill","xIsNext","this","handleClick","slice","setState","status","winner","renderSquare","React","Game","ReactDOM","document","getElementById"],"mappings":"wMAEO,SAASA,EAAgBC,GAW9B,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,I,WCXRG,EAAS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAC9B,OACE,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,KCDMG,EAAb,4MACEC,MAAoB,CAClBZ,QAASa,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAHb,kDAKE,SAAab,GAAY,IAAD,OACtB,OACE,cAAC,EAAD,CACEM,MAAOQ,KAAKJ,MAAMZ,QAAQE,GAC1BO,QAAS,kBAAM,EAAKQ,YAAYf,QATxC,yBAcE,SAAYA,GACV,IAAMF,EAAUgB,KAAKJ,MAAMZ,QAAQkB,QAC/BnB,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKc,KAAKJ,MAAMG,QAAU,IAAM,IACxCC,KAAKG,SAAS,CAAEnB,QAASA,EAASe,SAAUC,KAAKJ,MAAMG,aApB3D,oBAuBE,WACE,IACIK,EADEC,EAAStB,EAAgBiB,KAAKJ,MAAMZ,SAQ1C,OALEoB,EADEC,EACO,WAAaA,EAEb,iBAAmBL,KAAKJ,MAAMG,QAAU,IAAM,KAIvD,gCACE,qBAAKL,UAAU,SAAf,SAAyBU,IACzB,sBAAKV,UAAU,YAAf,UACGM,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,sBAAKZ,UAAU,YAAf,UACGM,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,sBAAKZ,UAAU,YAAf,UACGM,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,aAhD7B,GAA2BC,aCJdC,EAAb,4JACE,WACE,OACE,sBAAKd,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,YAAf,UACE,wBACA,iCATV,GAA0Ba,aCK1BE,SAAgB,cAAC,EAAD,IAAUC,SAASC,eAAe,U","file":"static/js/main.51fc81cf.chunk.js","sourcesContent":["import { Squares } from \"../types\";\r\n\r\nexport function calculateWinner(squares: Squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n}\r\n","type SquareProps = {\r\n  value: \"X\" | \"O\" | null;\r\n  onClick: () => void;\r\n};\r\n\r\nexport const Square = ({ value, onClick }: SquareProps) => {\r\n  return (\r\n    <button className=\"square\" onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { calculateWinner } from \"../Modules/calculateWinner\";\r\nimport { BoardState } from \"../types\";\r\nimport { Square } from \"./Square\";\r\n\r\ntype BoardProps = {};\r\nexport class Board extends React.Component<BoardProps, BoardState> {\r\n  state: BoardState = {\r\n    squares: Array(9).fill(null),\r\n    xIsNext: true,\r\n  };\r\n  renderSquare(i: number) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleClick(i: number) {\r\n    const squares = this.state.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({ squares: squares, xIsNext: !this.state.xIsNext });\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Board } from \"./Board\";\r\n\r\nexport class Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./index.css\";\r\n\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Game } from \"./components/Game\";\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}